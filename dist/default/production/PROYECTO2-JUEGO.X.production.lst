

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Oct 20 14:31:22 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214     00EF                     __pidataBANK0:
   215                           
   216                           ;initializer for _horas
   217     00EF  3401               	retlw	1
   218                           
   219                           ;initializer for _POTENCIOMETRO2
   220     00F0  3419               	retlw	25
   221                           
   222                           	psect	idataCOMMON
   223     00EC                     __pidataCOMMON:
   224                           
   225                           ;initializer for _seconds
   226     00EC  342D               	retlw	45
   227                           
   228                           ;initializer for _minutes
   229     00ED  343B               	retlw	59
   230                           
   231                           ;initializer for _hours
   232     00EE  340C               	retlw	12
   233     0018                     _RCSTAbits	set	24
   234     0008                     _PORTD	set	8
   235     0006                     _PORTB	set	6
   236     0005                     _PORTA	set	5
   237     0005                     _PORTAbits	set	5
   238     0019                     _TXREG	set	25
   239     0006                     _PORTBbits	set	6
   240     000B                     _INTCONbits	set	11
   241     009A                     _SPBRGH	set	154
   242     0099                     _SPBRG	set	153
   243     0098                     _TXSTAbits	set	152
   244     008C                     _PIE1bits	set	140
   245     008F                     _OSCCONbits	set	143
   246     0096                     _IOCB	set	150
   247     0095                     _WPUB	set	149
   248     0081                     _OPTION_REGbits	set	129
   249     0088                     _TRISD	set	136
   250     0085                     _TRISA	set	133
   251     0087                     _TRISC	set	135
   252     0086                     _TRISB	set	134
   253     0187                     _BAUDCTLbits	set	391
   254     0189                     _ANSELH	set	393
   255     0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258     000F                     start_initialization:	
   259                           ; #config settings
   260                           
   261     000F                     __initialization:
   262                           
   263                           ; Initialize objects allocated to BANK0
   264     000F  120A  118A  20EF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   265     0014  00B2               	movwf	__pdataBANK0& (0+127)
   266     0015  120A  118A  20F0  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   267     001A  00B3               	movwf	(__pdataBANK0+1)& (0+127)
   268                           
   269                           ; Initialize objects allocated to COMMON
   270     001B  120A  118A  20EC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   271     0020  00F9               	movwf	__pdataCOMMON& (0+127)
   272     0021  120A  118A  20ED  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   273     0026  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   274     0027  120A  118A  20EE  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   275     002C  00FB               	movwf	(__pdataCOMMON+2)& (0+127)
   276                           
   277                           ; Clear objects allocated to BANK0
   278     002D  1383               	bcf	3,7	;select IRP bank0
   279     002E  3020               	movlw	low __pbssBANK0
   280     002F  0084               	movwf	4
   281     0030  3032               	movlw	low (__pbssBANK0+18)
   282     0031  120A  118A  20E4  120A  118A  	fcall	clear_ram0
   283                           
   284                           ; Clear objects allocated to COMMON
   285     0036  3070               	movlw	low __pbssCOMMON
   286     0037  0084               	movwf	4
   287     0038  3079               	movlw	low (__pbssCOMMON+9)
   288     0039  120A  118A  20E4  120A  118A  	fcall	clear_ram0
   289     003E                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     003E                     __end_of__initialization:
   293     003E  0183               	clrf	3
   294     003F  120A  118A  28DB   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssCOMMON
   297     0070                     __pbssCOMMON:
   298     0070                     _PUERTO1:
   299     0070                     	ds	1
   300     0071                     _entrada:
   301     0071                     	ds	1
   302     0072                     _VALOR_A_ENVIAR:
   303     0072                     	ds	1
   304     0073                     _VALOR_RECIBIDO:
   305     0073                     	ds	1
   306     0074                     _canal_ADC:
   307     0074                     	ds	1
   308     0075                     _POT2:
   309     0075                     	ds	1
   310     0076                     _POT1:
   311     0076                     	ds	1
   312     0077                     _dato:
   313     0077                     	ds	1
   314     0078                     _z:
   315     0078                     	ds	1
   316                           
   317                           	psect	dataCOMMON
   318     0079                     __pdataCOMMON:
   319     0079                     _seconds:
   320     0079                     	ds	1
   321     007A                     _minutes:
   322     007A                     	ds	1
   323     007B                     _hours:
   324     007B                     	ds	1
   325                           
   326                           	psect	bssBANK0
   327     0020                     __pbssBANK0:
   328     0020                     _VOLTAJE_0:
   329     0020                     	ds	2
   330     0022                     _VAL_POT_0:
   331     0022                     	ds	1
   332     0023                     _dec_POT_0:
   333     0023                     	ds	1
   334     0024                     _init_POT_0:
   335     0024                     	ds	1
   336     0025                     _s:
   337     0025                     	ds	1
   338     0026                     _mover:
   339     0026                     	ds	1
   340     0027                     _direccion:
   341     0027                     	ds	1
   342     0028                     _estado:
   343     0028                     	ds	1
   344     0029                     _adelante:
   345     0029                     	ds	1
   346     002A                     _temperatura:
   347     002A                     	ds	1
   348     002B                     _cambiar:
   349     002B                     	ds	1
   350     002C                     _bandera3:
   351     002C                     	ds	1
   352     002D                     _bandera2:
   353     002D                     	ds	1
   354     002E                     _PUSH2:
   355     002E                     	ds	1
   356     002F                     _PUSH:
   357     002F                     	ds	1
   358     0030                     _bandera:
   359     0030                     	ds	1
   360     0031                     _entrada2:
   361     0031                     	ds	1
   362                           
   363                           	psect	dataBANK0
   364     0032                     __pdataBANK0:
   365     0032                     _horas:
   366     0032                     	ds	1
   367     0033                     _POTENCIOMETRO2:
   368     0033                     	ds	1
   369                           
   370                           	psect	clrtext
   371     00E4                     clear_ram0:	
   372                           ;	Called with FSR containing the base address, and
   373                           ;	W with the last address+1
   374                           
   375     00E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   376     00E5                     clrloop0:
   377     00E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   378     00E6  0A84               	incf	4,f	;increment pointer
   379     00E7  0604               	xorwf	4,w	;XOR with final address
   380     00E8  1903               	btfsc	3,2	;have we reached the end yet?
   381     00E9  3400               	retlw	0	;all done for this memory range, return
   382     00EA  0604               	xorwf	4,w	;XOR again to restore value
   383     00EB  28E5               	goto	clrloop0	;do the next byte
   384                           
   385                           	psect	cstackCOMMON
   386     007C                     __pcstackCOMMON:
   387     007C                     ?_setup:
   388     007C                     ?_isr:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     007C                     ??_isr:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     007C                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399     007C                     	ds	2
   400     007E                     ??_setup:
   401     007E                     ??_main:	
   402                           ; 1 bytes @ 0x2
   403                           
   404                           
   405                           	psect	maintext
   406     00DB                     __pmaintext:	
   407                           ; 1 bytes @ 0x2
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 129 in file "main.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0
   430 ;;      Totals:         0       0       0       0       0
   431 ;;Total ram usage:        0 bytes
   432 ;; Hardware stack levels required when called: 2
   433 ;; This function calls:
   434 ;;		_setup
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440     00DB                     _main:	
   441                           ;psect for function _main
   442                           
   443     00DB                     l828:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 130:     setup();
   449     00DB  120A  118A  20A0  120A  118A  	fcall	_setup
   450     00E0                     l134:	
   451                           ;main.c: 131:     while(1){
   452                           
   453     00E0                     l135:	
   454                           ;main.c: 132:     }
   455                           
   456     00E0  28E0               	goto	l134
   457     00E1  120A  118A  280C   	ljmp	start
   458     00E4                     __end_of_main:
   459                           
   460                           	psect	text1
   461     00A0                     __ptext1:	
   462 ;; *************** function _setup *****************
   463 ;; Defined at:
   464 ;;		line 138 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      void 
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; Hardware stack levels required when called: 1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_main
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492     00A0                     _setup:	
   493                           ;psect for function _setup
   494                           
   495     00A0                     l732:	
   496                           ;incstack = 0
   497                           ; Regs used in _setup: [wreg+status,2+status,0]
   498                           
   499                           
   500                           ;main.c: 139:     ANSEL = 0;
   501     00A0  1683               	bsf	3,5	;RP0=1, select bank3
   502     00A1  1703               	bsf	3,6	;RP1=1, select bank3
   503     00A2  0188               	clrf	8	;volatile
   504                           
   505                           ;main.c: 140:     ANSELH = 0;
   506     00A3  0189               	clrf	9	;volatile
   507     00A4                     l734:
   508                           
   509                           ;main.c: 141:     TRISB = 0b00000111;
   510     00A4  3007               	movlw	7
   511     00A5  1683               	bsf	3,5	;RP0=1, select bank1
   512     00A6  1303               	bcf	3,6	;RP1=0, select bank1
   513     00A7  0086               	movwf	6	;volatile
   514     00A8                     l736:
   515                           
   516                           ;main.c: 142:     TRISC = 0b10000000;
   517     00A8  3080               	movlw	128
   518     00A9  0087               	movwf	7	;volatile
   519                           
   520                           ;main.c: 143:     TRISA = 0;
   521     00AA  0185               	clrf	5	;volatile
   522                           
   523                           ;main.c: 144:     PORTA = 0;
   524     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   525     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   526     00AD  0185               	clrf	5	;volatile
   527                           
   528                           ;main.c: 145:     TRISD = 0;
   529     00AE  1683               	bsf	3,5	;RP0=1, select bank1
   530     00AF  1303               	bcf	3,6	;RP1=0, select bank1
   531     00B0  0188               	clrf	8	;volatile
   532                           
   533                           ;main.c: 146:     PORTB = 0;
   534     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   535     00B2  1303               	bcf	3,6	;RP1=0, select bank0
   536     00B3  0186               	clrf	6	;volatile
   537                           
   538                           ;main.c: 147:     PORTD = 0;
   539     00B4  0188               	clrf	8	;volatile
   540     00B5                     l738:
   541                           
   542                           ;main.c: 150:     OPTION_REGbits.nRBPU = 0;
   543     00B5  1683               	bsf	3,5	;RP0=1, select bank1
   544     00B6  1303               	bcf	3,6	;RP1=0, select bank1
   545     00B7  1381               	bcf	1,7	;volatile
   546     00B8                     l740:
   547                           
   548                           ;main.c: 151:     WPUB = 0b00000111;
   549     00B8  3007               	movlw	7
   550     00B9  0095               	movwf	21	;volatile
   551     00BA                     l742:
   552                           
   553                           ;main.c: 152:     INTCONbits.RBIE = 1;
   554     00BA  158B               	bsf	11,3	;volatile
   555     00BB                     l744:
   556                           
   557                           ;main.c: 153:     IOCB = 0b00000111;
   558     00BB  3007               	movlw	7
   559     00BC  0096               	movwf	22	;volatile
   560     00BD                     l746:
   561                           
   562                           ;main.c: 154:     INTCONbits.RBIF = 0;
   563     00BD  100B               	bcf	11,0	;volatile
   564     00BE                     l748:
   565                           
   566                           ;main.c: 156:     OSCCONbits.SCS = 1;
   567     00BE  140F               	bsf	15,0	;volatile
   568     00BF                     l750:
   569                           
   570                           ;main.c: 157:     OSCCONbits.IRCF = 0b100;
   571     00BF  080F               	movf	15,w	;volatile
   572     00C0  398F               	andlw	-113
   573     00C1  3840               	iorlw	64
   574     00C2  008F               	movwf	15	;volatile
   575     00C3                     l752:
   576                           
   577                           ;main.c: 159:     INTCONbits.PEIE = 1;
   578     00C3  170B               	bsf	11,6	;volatile
   579     00C4                     l754:
   580                           
   581                           ;main.c: 160:     INTCONbits.GIE = 1;
   582     00C4  178B               	bsf	11,7	;volatile
   583     00C5                     l756:
   584                           
   585                           ;main.c: 161:     PIE1bits.RCIE = 1;
   586     00C5  168C               	bsf	12,5	;volatile
   587     00C6                     l758:
   588                           
   589                           ;main.c: 164:     TXSTAbits.SYNC = 0;
   590     00C6  1218               	bcf	24,4	;volatile
   591     00C7                     l760:
   592                           
   593                           ;main.c: 165:     TXSTAbits.BRGH = 1;
   594     00C7  1518               	bsf	24,2	;volatile
   595     00C8                     l762:
   596                           
   597                           ;main.c: 166:     BAUDCTLbits.BRG16 = 1;
   598     00C8  1683               	bsf	3,5	;RP0=1, select bank3
   599     00C9  1703               	bsf	3,6	;RP1=1, select bank3
   600     00CA  1587               	bsf	7,3	;volatile
   601     00CB                     l764:
   602                           
   603                           ;main.c: 168:     SPBRG = 25;
   604     00CB  3019               	movlw	25
   605     00CC  1683               	bsf	3,5	;RP0=1, select bank1
   606     00CD  1303               	bcf	3,6	;RP1=0, select bank1
   607     00CE  0099               	movwf	25	;volatile
   608     00CF                     l766:
   609                           
   610                           ;main.c: 169:     SPBRGH = 0;
   611     00CF  019A               	clrf	26	;volatile
   612     00D0                     l768:
   613                           
   614                           ;main.c: 171:     RCSTAbits.SPEN = 1;
   615     00D0  1283               	bcf	3,5	;RP0=0, select bank0
   616     00D1  1303               	bcf	3,6	;RP1=0, select bank0
   617     00D2  1798               	bsf	24,7	;volatile
   618     00D3                     l770:
   619                           
   620                           ;main.c: 172:     TXSTAbits.TX9 = 0;
   621     00D3  1683               	bsf	3,5	;RP0=1, select bank1
   622     00D4  1303               	bcf	3,6	;RP1=0, select bank1
   623     00D5  1318               	bcf	24,6	;volatile
   624     00D6                     l772:
   625                           
   626                           ;main.c: 173:     TXSTAbits.TXEN = 1;
   627     00D6  1698               	bsf	24,5	;volatile
   628     00D7                     l774:
   629                           
   630                           ;main.c: 174:     RCSTAbits.CREN = 1;
   631     00D7  1283               	bcf	3,5	;RP0=0, select bank0
   632     00D8  1303               	bcf	3,6	;RP1=0, select bank0
   633     00D9  1618               	bsf	24,4	;volatile
   634     00DA                     l140:
   635     00DA  0008               	return
   636     00DB                     __end_of_setup:
   637                           
   638                           	psect	text2
   639     0042                     __ptext2:	
   640 ;; *************** function _isr *****************
   641 ;; Defined at:
   642 ;;		line 84 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          2       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		Interrupt level 1
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669     0042                     _isr:	
   670                           ;psect for function _isr
   671                           
   672     0042                     i1l776:
   673                           
   674                           ;main.c: 85:     if(INTCONbits.RBIF){
   675     0042  1C0B               	btfss	11,0	;volatile
   676     0043  2845               	goto	u1_21
   677     0044  2846               	goto	u1_20
   678     0045                     u1_21:
   679     0045  2899               	goto	i1l129
   680     0046                     u1_20:
   681     0046                     i1l778:
   682                           
   683                           ;main.c: 86:         if (PUERTO1 == 0){
   684     0046  0870               	movf	_PUERTO1,w
   685     0047  1D03               	btfss	3,2
   686     0048  284A               	goto	u2_21
   687     0049  284B               	goto	u2_20
   688     004A                     u2_21:
   689     004A  286C               	goto	i1l116
   690     004B                     u2_20:
   691     004B                     i1l780:
   692                           
   693                           ;main.c: 87:             if (!PORTBbits.RB0){
   694     004B  1283               	bcf	3,5	;RP0=0, select bank0
   695     004C  1303               	bcf	3,6	;RP1=0, select bank0
   696     004D  1806               	btfsc	6,0	;volatile
   697     004E  2850               	goto	u3_21
   698     004F  2851               	goto	u3_20
   699     0050                     u3_21:
   700     0050  2857               	goto	i1l117
   701     0051                     u3_20:
   702     0051                     i1l782:
   703                           
   704                           ;main.c: 88:                 TXREG = 65;
   705     0051  3041               	movlw	65
   706     0052  0099               	movwf	25	;volatile
   707     0053                     i1l784:
   708                           
   709                           ;main.c: 89:                 PORTAbits.RA0 = 1;
   710     0053  1405               	bsf	5,0	;volatile
   711     0054                     i1l786:
   712                           
   713                           ;main.c: 90:                 PUERTO1 = 1;
   714     0054  01F0               	clrf	_PUERTO1
   715     0055  0AF0               	incf	_PUERTO1,f
   716                           
   717                           ;main.c: 91:             }
   718     0056  2898               	goto	i1l824
   719     0057                     i1l117:	
   720                           ;main.c: 93:             else if (!PORTBbits.RB1){
   721                           
   722     0057  1886               	btfsc	6,1	;volatile
   723     0058  285A               	goto	u4_21
   724     0059  285B               	goto	u4_20
   725     005A                     u4_21:
   726     005A  2861               	goto	i1l119
   727     005B                     u4_20:
   728     005B                     i1l788:
   729                           
   730                           ;main.c: 94:                 TXREG = 67;
   731     005B  3043               	movlw	67
   732     005C  0099               	movwf	25	;volatile
   733     005D                     i1l790:
   734                           
   735                           ;main.c: 95:                 PORTAbits.RA1 = 1;
   736     005D  1485               	bsf	5,1	;volatile
   737                           
   738                           ;main.c: 96:                 PUERTO1 = 2;
   739     005E  3002               	movlw	2
   740     005F  00F0               	movwf	_PUERTO1
   741                           
   742                           ;main.c: 97:             }
   743     0060  2898               	goto	i1l824
   744     0061                     i1l119:	
   745                           ;main.c: 98:             else if (!PORTBbits.RB2){
   746                           
   747     0061  1906               	btfsc	6,2	;volatile
   748     0062  2864               	goto	u5_21
   749     0063  2865               	goto	u5_20
   750     0064                     u5_21:
   751     0064  286B               	goto	i1l118
   752     0065                     u5_20:
   753     0065                     i1l792:
   754                           
   755                           ;main.c: 99:                 TXREG = 69;
   756     0065  3045               	movlw	69
   757     0066  0099               	movwf	25	;volatile
   758     0067                     i1l794:
   759                           
   760                           ;main.c: 100:                 PORTAbits.RA2 = 1;
   761     0067  1505               	bsf	5,2	;volatile
   762                           
   763                           ;main.c: 101:                 PUERTO1 = 3;
   764     0068  3003               	movlw	3
   765     0069  00F0               	movwf	_PUERTO1
   766     006A  2898               	goto	i1l824
   767     006B                     i1l118:
   768                           
   769                           ;main.c: 103:         }
   770     006B  2898               	goto	i1l824
   771     006C                     i1l116:	
   772                           ;main.c: 104:         else if(PORTBbits.RB2 && PORTBbits.RB1 && PORTBbits.RB0) {
   773                           
   774     006C  1283               	bcf	3,5	;RP0=0, select bank0
   775     006D  1303               	bcf	3,6	;RP1=0, select bank0
   776     006E  1D06               	btfss	6,2	;volatile
   777     006F  2871               	goto	u6_21
   778     0070  2872               	goto	u6_20
   779     0071                     u6_21:
   780     0071  2898               	goto	i1l824
   781     0072                     u6_20:
   782     0072                     i1l796:
   783     0072  1C86               	btfss	6,1	;volatile
   784     0073  2875               	goto	u7_21
   785     0074  2876               	goto	u7_20
   786     0075                     u7_21:
   787     0075  2898               	goto	i1l824
   788     0076                     u7_20:
   789     0076                     i1l798:
   790     0076  1C06               	btfss	6,0	;volatile
   791     0077  2879               	goto	u8_21
   792     0078  287A               	goto	u8_20
   793     0079                     u8_21:
   794     0079  2898               	goto	i1l824
   795     007A                     u8_20:
   796     007A                     i1l800:
   797                           
   798                           ;main.c: 105:             if (PUERTO1 == 1){
   799     007A  0370               	decf	_PUERTO1,w
   800     007B  1D03               	btfss	3,2
   801     007C  287E               	goto	u9_21
   802     007D  287F               	goto	u9_20
   803     007E                     u9_21:
   804     007E  2884               	goto	i1l808
   805     007F                     u9_20:
   806     007F                     i1l802:
   807                           
   808                           ;main.c: 106:                 TXREG = 66;
   809     007F  3042               	movlw	66
   810     0080  0099               	movwf	25	;volatile
   811     0081                     i1l804:
   812                           
   813                           ;main.c: 107:                 PORTAbits.RA0 = 0;
   814     0081  1005               	bcf	5,0	;volatile
   815     0082                     i1l806:
   816                           
   817                           ;main.c: 108:                 PUERTO1 = 0;
   818     0082  01F0               	clrf	_PUERTO1
   819                           
   820                           ;main.c: 109:             }
   821     0083  2898               	goto	i1l824
   822     0084                     i1l808:
   823     0084  3002               	movlw	2
   824     0085  0670               	xorwf	_PUERTO1,w
   825     0086  1D03               	btfss	3,2
   826     0087  2889               	goto	u10_21
   827     0088  288A               	goto	u10_20
   828     0089                     u10_21:
   829     0089  288E               	goto	i1l816
   830     008A                     u10_20:
   831     008A                     i1l810:
   832                           
   833                           ;main.c: 111:                 TXREG = 68;
   834     008A  3044               	movlw	68
   835     008B  0099               	movwf	25	;volatile
   836     008C                     i1l812:
   837                           
   838                           ;main.c: 112:                 PORTAbits.RA1 = 0;
   839     008C  1085               	bcf	5,1	;volatile
   840     008D  2882               	goto	i1l806
   841     008E                     i1l816:
   842     008E  3003               	movlw	3
   843     008F  0670               	xorwf	_PUERTO1,w
   844     0090  1D03               	btfss	3,2
   845     0091  2893               	goto	u11_21
   846     0092  2894               	goto	u11_20
   847     0093                     u11_21:
   848     0093  286B               	goto	i1l118
   849     0094                     u11_20:
   850     0094                     i1l818:
   851                           
   852                           ;main.c: 116:                 TXREG = 70;
   853     0094  3046               	movlw	70
   854     0095  0099               	movwf	25	;volatile
   855     0096                     i1l820:
   856                           
   857                           ;main.c: 117:                 PORTAbits.RA2 = 0;
   858     0096  1105               	bcf	5,2	;volatile
   859     0097  2882               	goto	i1l806
   860     0098                     i1l824:
   861                           
   862                           ;main.c: 123:         INTCONbits.RBIF = 0;
   863     0098  100B               	bcf	11,0	;volatile
   864     0099                     i1l129:
   865     0099  087D               	movf	??_isr+1,w
   866     009A  008A               	movwf	10
   867     009B  0E7C               	swapf	??_isr,w
   868     009C  0083               	movwf	3
   869     009D  0EFE               	swapf	btemp,f
   870     009E  0E7E               	swapf	btemp,w
   871     009F  0009               	retfie
   872     00A0                     __end_of_isr:
   873     007E                     btemp	set	126	;btemp
   874     007E                     wtemp0	set	126
   875                           
   876                           	psect	intentry
   877     0004                     __pintentry:	
   878                           ;incstack = 0
   879                           ; Regs used in _isr: [wreg+status,2+status,0]
   880                           
   881     0004                     interrupt_function:
   882     007E                     saved_w	set	btemp
   883     0004  00FE               	movwf	btemp
   884     0005  0E03               	swapf	3,w
   885     0006  00FC               	movwf	??_isr
   886     0007  080A               	movf	10,w
   887     0008  00FD               	movwf	??_isr+1
   888     0009  120A  118A  2842   	ljmp	_isr
   889                           
   890                           	psect	idloc
   891                           
   892                           ;Config register IDLOC0 @ 0x2000
   893                           ;	unspecified, using default values
   894     2000                     	org	8192
   895     2000  3FFF               	dw	16383
   896                           
   897                           ;Config register IDLOC1 @ 0x2001
   898                           ;	unspecified, using default values
   899     2001                     	org	8193
   900     2001  3FFF               	dw	16383
   901                           
   902                           ;Config register IDLOC2 @ 0x2002
   903                           ;	unspecified, using default values
   904     2002                     	org	8194
   905     2002  3FFF               	dw	16383
   906                           
   907                           ;Config register IDLOC3 @ 0x2003
   908                           ;	unspecified, using default values
   909     2003                     	org	8195
   910     2003  3FFF               	dw	16383
   911                           
   912                           	psect	config
   913                           
   914                           ;Config register CONFIG1 @ 0x2007
   915                           ;	Oscillator Selection bits
   916                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   917                           ;	Watchdog Timer Enable bit
   918                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   919                           ;	Power-up Timer Enable bit
   920                           ;	PWRTE = OFF, PWRT disabled
   921                           ;	RE3/MCLR pin function select bit
   922                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   923                           ;	Code Protection bit
   924                           ;	CP = OFF, Program memory code protection is disabled
   925                           ;	Data Code Protection bit
   926                           ;	CPD = OFF, Data memory code protection is disabled
   927                           ;	Brown Out Reset Selection bits
   928                           ;	BOREN = OFF, BOR disabled
   929                           ;	Internal External Switchover bit
   930                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   931                           ;	Fail-Safe Clock Monitor Enabled bit
   932                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   933                           ;	Low Voltage Programming Enable bit
   934                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   935                           ;	In-Circuit Debugger Mode bit
   936                           ;	DEBUG = 0x1, unprogramme   937     2007                     	org	8199
   938     2007  20D4               	dw	8404
   939                           
   940                           ;Config register CONFIG2 @ 0x2008
   941                           ;	Brown-out Reset Selection bit
   942                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   943                           ;	Flash Program Memory Self Write Enable bits
   944                           ;	WRT = OFF, Write protection off
   945     2008                     	org	8200
   946     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      14
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Oct 20 14:31:22 2022

                      _s 0025                        _z 0078                       fsr 0004  
                    l140 00DA                      l134 00E0                      l135 00E0  
                    l740 00B8                      l732 00A0                      l750 00BF  
                    l742 00BA                      l734 00A4                      l760 00C7  
                    l752 00C3                      l744 00BB                      l736 00A8  
                    l770 00D3                      l762 00C8                      l754 00C4  
                    l746 00BD                      l738 00B5                      l772 00D6  
                    l764 00CB                      l756 00C5                      l748 00BE  
                    l828 00DB                      l774 00D7                      l766 00CF  
                    l758 00C6                      l768 00D0                      _isr 0042  
                    indf 0000                     ?_isr 007C                     _IOCB 0096  
                   _POT1 0076                     _POT2 0075                     _PUSH 002F  
                   _WPUB 0095                     u1_20 0046                     u1_21 0045  
                   u2_20 004B                     u2_21 004A                     u3_20 0051  
                   u3_21 0050                     u4_20 005B                     u4_21 005A  
                   u5_20 0065                     u5_21 0064                     u6_20 0072  
                   u6_21 0071                     u7_20 0076                     u7_21 0075  
                   u8_20 007A                     u8_21 0079                     u9_20 007F  
                   u9_21 007E                     _dato 0077                     _main 00DB  
                   btemp 007E                     start 000C                    ??_isr 007C  
                  ?_main 007C                    _ANSEL 0188                    i1l116 006C  
                  i1l117 0057                    i1l118 006B                    i1l119 0061  
                  i1l129 0099                    i1l800 007A                    i1l810 008A  
                  i1l802 007F                    i1l820 0096                    i1l812 008C  
                  i1l804 0081                    i1l806 0082                    i1l816 008E  
                  i1l808 0084                    i1l824 0098                    i1l818 0094  
                  i1l780 004B                    i1l790 005D                    i1l782 0051  
                  i1l792 0065                    i1l784 0053                    i1l776 0042  
                  i1l794 0067                    i1l786 0054                    i1l778 0046  
                  i1l796 0072                    i1l788 005B                    i1l798 0076  
                  u10_20 008A                    u10_21 0089                    u11_20 0094  
                  u11_21 0093                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PUSH2 002E  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019           _VALOR_A_ENVIAR 0072  
         _VALOR_RECIBIDO 0073                    _horas 0032                    _hours 007B  
                  _mover 0026                    _setup 00A0                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00E4                   ??_main 007E                   ?_setup 007C  
                 _ANSELH 0189                   _SPBRGH 009A           _POTENCIOMETRO2 0033  
                 _estado 0028             __pdataCOMMON 0079                   saved_w 007E  
__end_of__initialization 003E           __pcstackCOMMON 007C             __pidataBANK0 00EF  
          __end_of_setup 00DB           _OPTION_REGbits 0081                  ??_setup 007E  
             __pbssBANK0 0020               __pmaintext 00DB               __pintentry 0004  
                _PUERTO1 0070               _init_POT_0 0024                  _bandera 0030  
                _cambiar 002B                  __ptext1 00A0                  __ptext2 0042  
                _entrada 0071                  _minutes 007A                  _seconds 0079  
                clrloop0 00E5     end_of_initialization 003E                _RCSTAbits 0018  
              _VAL_POT_0 0022                _PORTAbits 0005                _PORTBbits 0006  
              _VOLTAJE_0 0020                _TXSTAbits 0098            __pidataCOMMON 00EC  
            _BAUDCTLbits 0187      start_initialization 000F              __end_of_isr 00A0  
            __pdataBANK0 0032              __pbssCOMMON 0070                ___latbits 0002  
              _dec_POT_0 0023                _canal_ADC 0074                _direccion 0027  
      interrupt_function 0004                clear_ram0 00E4                 _PIE1bits 008C  
               _adelante 0029                 _bandera2 002D                 _bandera3 002C  
               _entrada2 0031               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F              _temperatura 002A  
